# All comments are in English.
apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name: test-app
  namespace: ampere
spec:
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: "an7on/ampere-spark-job-test"
  imagePullPolicy: IfNotPresent

  mainApplicationFile: "local:///apps/test_spark_app.py"

  sparkConf:
    "spark.hadoop.fs.s3a.endpoint": "http://minio:9000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
    "spark.driver.extraClassPath": "/opt/spark/extra-jars/*"
    "spark.executor.extraClassPath": "/opt/spark/extra-jars/*"

  nodeSelector:
    kubernetes.io/hostname: ampere-k8s-node3

  driver:
    cores: 1
    memory: "1g"
    serviceAccount: "spark"
    envVars:
      MINIO_TEST_BUCKET: "ampere-prod-raw"
      MINIO_ENDPOINT: "http://minio:9000"
      MINIO_USE_SSL: "false"
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:     { name: minio-creds, key: accesskey }
      AWS_SECRET_ACCESS_KEY: { name: minio-creds, key: secretkey }
    securityContext: { runAsUser: 185, runAsNonRoot: true }

  executor:
    instances: 2
    cores: 1
    memory: "1g"
    serviceAccount: "spark"
    envVars:
      MINIO_TEST_BUCKET: "ampere-prod-raw"
      MINIO_ENDPOINT: "http://minio:9000"
      MINIO_USE_SSL: "false"
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:     { name: minio-creds, key: accesskey }
      AWS_SECRET_ACCESS_KEY: { name: minio-creds, key: secretkey }
    securityContext: { runAsUser: 185, runAsNonRoot: true }

  restartPolicy: { type: Never }
